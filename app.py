import telebot
from telebot import types
import os
import threading
from datetime import datetime, timedelta
from flask import Flask, request

BOT_TOKEN = "7426978790:AAEaAZJIv2sZnoH1BAeSJ6zPMBXfnqZ2Prw"
CHAT_ID = -1002063123602  # ID –≤–∞—à–µ–≥–æ —á–∞—Ç–∞

bot = telebot.TeleBot(BOT_TOKEN)
server = Flask(__name__)

def revoke_link_later(chat_id, invite_link, delay=10):
    def worker():
        try:
            threading.Event().wait(delay)
            bot.revoke_chat_invite_link(chat_id, invite_link)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏: {e}")
    threading.Thread(target=worker).start()

@bot.message_handler(commands=['start'])
def send_temporary_link(message):
    try:
        expire_time = datetime.now() + timedelta(seconds=30)
        expire_timestamp = int(expire_time.timestamp())
        invite = bot.create_chat_invite_link(
            chat_id=CHAT_ID,
            expire_date=expire_timestamp,
            member_limit=1
        )
        invite_link = invite.invite_link

        bot.send_message(
            message.chat.id,
            f"üå¥ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
            f"–í–∞—à–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —á–∞—Ç –æ –¢–∞–∏–ª–∞–Ω–¥–µ –∏ –ü—Ö—É–∫–µ—Ç–µ "
            f"(–¥–µ–π—Å—Ç–≤—É–µ—Ç 10 —Å–µ–∫—É–Ω–¥):\n\n{invite_link}\n\n"
            f"‚ö†Ô∏è –ü–æ—Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å! –°—Å—ã–ª–∫–∞ –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥."
        )

        revoke_link_later(CHAT_ID, invite_link, delay=10)

    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏: {e}")

@bot.chat_member_handler()
def on_user_join(update):
    chat_id = update.chat.id
    user_id = update.new_chat_member.user.id
    status = update.new_chat_member.status

    if status == "member":
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å)
        bot.restrict_chat_member(
            chat_id,
            user_id,
            can_send_messages=False,
            can_send_media_messages=False,
            can_send_other_messages=False,
            can_add_web_page_previews=False
        )

        # –ö–Ω–æ–ø–∫–∞ "–Ø —á–µ–ª–æ–≤–µ–∫"
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–Ø —á–µ–ª–æ–≤–µ–∫", callback_data=f"verify_{user_id}")
        markup.add(btn)

        bot.send_message(
            chat_id,
            f"üå¥ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {update.new_chat_member.user.first_name}! üåû\n\n"
            "–¢—ã –ø–æ–ø–∞–ª –≤ —É—é—Ç–Ω—ã–π —á–∞—Ç –æ –¢–∞–∏–ª–∞–Ω–¥–µ –∏ –ü—Ö—É–∫–µ—Ç–µ! –ó–¥–µ—Å—å –¥–µ–ª–∏–º—Å—è —Å–æ–≤–µ—Ç–∞–º–∏, –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏, "
            "–æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–æ—Å—Ç–æ –æ–±—â–∞–µ–º—Å—è –ø–æ-–¥–æ–±—Ä–æ–º—É.\n\n"
            "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –¥–æ–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —á–µ–ª–æ–≤–µ–∫ üòä",
            reply_markup=markup
        )

@bot.callback_query_handler(func=lambda call: call.data.startswith("verify_"))
def verify_user(call):
    chat_id = call.message.chat.id
    user_id = int(call.data.split("_")[1])

    if call.from_user.id == user_id:
        bot.restrict_chat_member(
            chat_id,
            user_id,
            can_send_messages=True,
            can_send_media_messages=True,
            can_send_other_messages=True,
            can_add_web_page_previews=True
        )
        bot.answer_callback_query(call.id, "–î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ç—ë–ø–ª—ã–π —á–∞—Ç üå∫")
        bot.edit_message_text(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ! –¢–µ–ø–µ—Ä—å —Ç—ã –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞—à–µ–≥–æ —Ç–∞–π—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. "
            "–ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –¥–µ–ª–∏—Ç—å—Å—è –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏! üèùÔ∏è",
            chat_id,
            call.message.message_id
        )
    else:
        bot.answer_callback_query(call.id, "–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å!")

# Webhook –¥–ª—è Railway
@server.route('/' + BOT_TOKEN, methods=['POST'])
def getMessage():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "!", 200

@server.route("/")
def webhook():
    bot.remove_webhook()
    webhook_url = "https://thaivibes-production.up.railway.app"
    bot.set_webhook(url=webhook_url + '/' + BOT_TOKEN)
    return "Webhook set!", 200

if __name__ == "__main__":
    server.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8080)))

if __name__ == "__main__":
    server.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8080)))
